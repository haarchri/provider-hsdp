/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClientObservation struct {

	// True if the client is disabled e.g. because the Org is disabled
	// True if the client is disabled e.g. because the managing Organization is disabled.
	Disabled *bool `json:"disabled,omitempty" tf:"disabled,omitempty"`

	// The GUID of the client
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ClientParameters struct {

	// Lifetime of the access token in seconds. If not specified, system default life time (1800 secs) will be considered.
	// Lifetime of the access token in seconds. If not specified, system default life time (1800 secs) will be considered.
	// +kubebuilder:validation:Optional
	AccessTokenLifetime *float64 `json:"accessTokenLifetime,omitempty" tf:"access_token_lifetime,omitempty"`

	// the application ID (GUID) to attach this client to
	// The application ID to attach this client to.
	// +crossplane:generate:reference:type=Application
	// +crossplane:generate:reference:refFieldName=ApplicationRef
	// +kubebuilder:validation:Optional
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// Selector for a Application to populate applicationId.
	// +kubebuilder:validation:Optional
	ApplicationIDSelector *v1.Selector `json:"applicationIdSelector,omitempty" tf:"-"`

	// Reference to a Application to populate applicationId.
	// +kubebuilder:validation:Optional
	ApplicationRef *v1.Reference `json:"applicationRef,omitempty" tf:"-"`

	// The client id
	// The client id
	// +kubebuilder:validation:Required
	ClientID *string `json:"clientId" tf:"client_id,omitempty"`

	// Flag when enabled, the resource owner will not be asked for consent during authorization flows.
	// Flag when enabled, the resource owner will not be asked for consent during authorization flows.
	// +kubebuilder:validation:Optional
	ConsentImplied *bool `json:"consentImplied,omitempty" tf:"consent_implied,omitempty"`

	// Array. Default scopes. You do not have to specify these explicitly when requesting a token
	// Default scopes. You do not have to specify these explicitly when requesting a token.
	// +kubebuilder:validation:Required
	DefaultScopes []*string `json:"defaultScopes" tf:"default_scopes,omitempty"`

	// The description of the client
	// The description of the client.
	// +kubebuilder:validation:Required
	Description *string `json:"description" tf:"description,omitempty"`

	// Reference identifier defined by the provisioning user. This reference Identifier will be carried over to identify the provisioned resource across deployment instances (ClientTest, Production). Invalid Characters:- "[&+â€™";=?()[]<>]
	// Reference identifier defined by the provisioning user. This reference Identifier will be carried over to identify the provisioned resource across deployment instances.
	// +kubebuilder:validation:Required
	GlobalReferenceID *string `json:"globalReferenceId" tf:"global_reference_id,omitempty"`

	// Lifetime of the jwt token generated in case openid scope is enabled for the client. If not specified, system default life time (3600 secs) will be considered.
	// Lifetime of the jwt token generated in case openid scope is enabled for the client. If not specified, system default life time (3600 secs) will be considered.
	// +kubebuilder:validation:Optional
	IDTokenLifetime *float64 `json:"idTokenLifetime,omitempty" tf:"id_token_lifetime,omitempty"`

	// The name of the client
	// Name of the client.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The password to use (8-16 chars, at least one capital, number, special char)
	// The password to use (8-16 chars, at least one capital, number, special char).
	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Array of valid RedirectionURIs for this client
	// List of valid RedirectionURIs for this client.
	// +kubebuilder:validation:Required
	RedirectionUris []*string `json:"redirectionUris" tf:"redirection_uris,omitempty"`

	// Lifetime of the refresh token in seconds. If not specified, system default life time (2592000 secs) will be considered.
	// Lifetime of the refresh token in seconds. If not specified, system default life time (2592000 secs) will be considered.
	// +kubebuilder:validation:Optional
	RefreshTokenLifetime *float64 `json:"refreshTokenLifetime,omitempty" tf:"refresh_token_lifetime,omitempty"`

	// Array. Examples of response types are "code id_token", "token id_token", etc.
	// Examples of response types are 'code id_token', 'token id_token', etc.
	// +kubebuilder:validation:Required
	ResponseTypes []*string `json:"responseTypes" tf:"response_types,omitempty"`

	// Array. List of supported scopes for this client
	// List of supported scopes for this client.
	// +kubebuilder:validation:Required
	Scopes []*string `json:"scopes" tf:"scopes,omitempty"`

	// Either Public or Confidential
	// The type of the client. Either 'Public' or 'Confidential'.
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// ClientSpec defines the desired state of Client
type ClientSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClientParameters `json:"forProvider"`
}

// ClientStatus defines the observed state of Client.
type ClientStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClientObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Client is the Schema for the Clients API. Manages HSDP IAM Client resources
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,hsdp}
type Client struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClientSpec   `json:"spec"`
	Status            ClientStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClientList contains a list of Clients
type ClientList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Client `json:"items"`
}

// Repository type metadata.
var (
	Client_Kind             = "Client"
	Client_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Client_Kind}.String()
	Client_KindAPIVersion   = Client_Kind + "." + CRDGroupVersion.String()
	Client_GroupVersionKind = CRDGroupVersion.WithKind(Client_Kind)
)

func init() {
	SchemeBuilder.Register(&Client{}, &ClientList{})
}
